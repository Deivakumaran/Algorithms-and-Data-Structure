/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.text.NumberFormat;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import luceneFinalProject.Lucene_Indexing;
import luceneFinalProject.Lucene_Suggestion;

/**
 *
 * @author PeaceFull
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    
        String operatorSelect;
        String fileSelect;
    ButtonGroup operatorGroup;
     ButtonGroup fileGroup;
    public MainJFrame() {
        operatorGroup = new ButtonGroup();

        fileGroup = new ButtonGroup();
        initComponents();
        operatorGroup.add(andRadioButton);
        operatorGroup.add(orRadioButton);
        operatorGroup.add(notRadioButton);
        fileGroup.add(jsonDocumentRadioButton);
        fileGroup.add(pdfDocumentRadioButton);
        fileGroup.add(textDocumentRadioButton);
        fileGroup.add(xmlDocumentRadioButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        splitJPane = new javax.swing.JSplitPane();
        leftJPanel = new javax.swing.JPanel();
        searchTextBox = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        textDocumentRadioButton = new javax.swing.JRadioButton();
        pdfDocumentRadioButton = new javax.swing.JRadioButton();
        xmlDocumentRadioButton = new javax.swing.JRadioButton();
        jsonDocumentRadioButton = new javax.swing.JRadioButton();
        searchButton = new javax.swing.JButton();
        suggestButton = new javax.swing.JButton();
        andRadioButton = new javax.swing.JRadioButton();
        orRadioButton = new javax.swing.JRadioButton();
        notRadioButton = new javax.swing.JRadioButton();
        searchTextBox2 = new javax.swing.JTextField();
        rightJPanel = new javax.swing.JPanel();
        rightScrollPane = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel.setPreferredSize(new java.awt.Dimension(146, 450));

        splitJPane.setDividerLocation(500);

        leftJPanel.setBackground(new java.awt.Color(238, 238, 248));
        leftJPanel.setBorder(new javax.swing.border.MatteBorder(null));
        leftJPanel.setPreferredSize(new java.awt.Dimension(300, 500));

        searchTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextBoxActionPerformed(evt);
            }
        });

        searchLabel.setText("Enter the text to be Searched");

        textDocumentRadioButton.setText("Text Document");

        pdfDocumentRadioButton.setText("PDF Document");

        xmlDocumentRadioButton.setText("XML Format Document");

        jsonDocumentRadioButton.setText("JSON Format Document");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        suggestButton.setText("Suggest Words");
        suggestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suggestButtonActionPerformed(evt);
            }
        });

        andRadioButton.setText("AND ");
        andRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                andRadioButtonActionPerformed(evt);
            }
        });

        orRadioButton.setText("OR");
        orRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orRadioButtonActionPerformed(evt);
            }
        });

        notRadioButton.setText("NOT");
        notRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notRadioButtonActionPerformed(evt);
            }
        });

        searchTextBox2.setEnabled(false);
        searchTextBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftJPanelLayout = new javax.swing.GroupLayout(leftJPanel);
        leftJPanel.setLayout(leftJPanelLayout);
        leftJPanelLayout.setHorizontalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(suggestButton))
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(andRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(orRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(notRadioButton))
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchTextBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(leftJPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(xmlDocumentRadioButton))
                            .addComponent(jsonDocumentRadioButton)
                            .addComponent(pdfDocumentRadioButton)
                            .addComponent(textDocumentRadioButton)))
                    .addGroup(leftJPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        leftJPanelLayout.setVerticalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(searchLabel)
                .addGap(18, 18, 18)
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suggestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(searchTextBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(andRadioButton)
                    .addComponent(orRadioButton)
                    .addComponent(notRadioButton))
                .addGap(18, 18, 18)
                .addComponent(textDocumentRadioButton)
                .addGap(30, 30, 30)
                .addComponent(pdfDocumentRadioButton)
                .addGap(37, 37, 37)
                .addComponent(jsonDocumentRadioButton)
                .addGap(26, 26, 26)
                .addComponent(xmlDocumentRadioButton)
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        splitJPane.setLeftComponent(leftJPanel);

        rightJPanel.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        resultTextArea.setColumns(20);
        resultTextArea.setRows(5);
        rightScrollPane.setViewportView(resultTextArea);

        javax.swing.GroupLayout rightJPanelLayout = new javax.swing.GroupLayout(rightJPanel);
        rightJPanel.setLayout(rightJPanelLayout);
        rightJPanelLayout.setHorizontalGroup(
            rightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rightScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
        );
        rightJPanelLayout.setVerticalGroup(
            rightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rightScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
        );

        splitJPane.setRightComponent(rightJPanel);

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitJPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitJPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextBoxActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_searchTextBoxActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        
       try{
           if(andRadioButton.isSelected()){
               operatorSelect="AND";
               
           }
           else if(orRadioButton.isSelected()){
               operatorSelect="OR";
           }
           else if(notRadioButton.isSelected()){
               operatorSelect="NOT";
           }
            else {
               operatorSelect="NONE";
           }
           
           
           if(jsonDocumentRadioButton.isSelected()){
             fileSelect="JSON";  
           }
           else if(textDocumentRadioButton.isSelected()){
                 fileSelect="TEXT";  
           }
          else if(xmlDocumentRadioButton.isSelected()){
                 fileSelect="XML";  
           }
           
           else if(pdfDocumentRadioButton.isSelected()){
                 fileSelect="PDF";  
           }
           
            System.out.println(operatorSelect);
            
            System.out.println(fileSelect);
           
           
        String searchText=searchTextBox.getText();
        
        if(searchText.length()==0){
            JOptionPane.showMessageDialog(null, "Please enter text to search");
          return;
        }
        
        searchText= searchText.trim().replaceAll(" +", " ");
        Lucene_Indexing indexing = new Lucene_Indexing(searchText,resultTextArea);
        indexing.indexingText();
      }catch(Exception e){
          e.printStackTrace();
      }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void suggestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suggestButtonActionPerformed
        // TODO add your handling code here:
        Lucene_Suggestion suggestion=new Lucene_Suggestion();
        
        String searchText=searchTextBox.getText();
        searchText= searchText.trim().replaceAll(" +", " ");
        
       int wordLength = searchText.split("\\s+").length;
       String lastWord = searchText.substring(searchText.lastIndexOf(" ")+1);
       // suggestion.suggest(lastWord);
        
    }//GEN-LAST:event_suggestButtonActionPerformed

    private void andRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_andRadioButtonActionPerformed
        // TODO add your handling code here:
        searchTextBox2.setEnabled(true);
        
       
       
        
    }//GEN-LAST:event_andRadioButtonActionPerformed

    private void orRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orRadioButtonActionPerformed
        // TODO add your handling code here:
       searchTextBox2.setEnabled(true);
    
    }//GEN-LAST:event_orRadioButtonActionPerformed

    private void notRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notRadioButtonActionPerformed
        // TODO add your handling code here:
          searchTextBox2.setEnabled(false);
    
    }//GEN-LAST:event_notRadioButtonActionPerformed

    private void searchTextBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextBox2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchTextBox2ActionPerformed

    
    public void printResult(String resultString){
        
        resultTextArea.setText(resultString);
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton andRadioButton;
    private javax.swing.JPanel jPanel;
    private javax.swing.JRadioButton jsonDocumentRadioButton;
    private javax.swing.JPanel leftJPanel;
    private javax.swing.JRadioButton notRadioButton;
    private javax.swing.JRadioButton orRadioButton;
    private javax.swing.JRadioButton pdfDocumentRadioButton;
    private javax.swing.JTextArea resultTextArea;
    private javax.swing.JPanel rightJPanel;
    private javax.swing.JScrollPane rightScrollPane;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTextField searchTextBox;
    private javax.swing.JTextField searchTextBox2;
    private javax.swing.JSplitPane splitJPane;
    private javax.swing.JButton suggestButton;
    private javax.swing.JRadioButton textDocumentRadioButton;
    private javax.swing.JRadioButton xmlDocumentRadioButton;
    // End of variables declaration//GEN-END:variables
}
